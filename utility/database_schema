-- Enable RLS
alter table if exists public.admins enable row level security;
alter table if exists public.pages enable row level security;
alter table if exists public.staff enable row level security;
alter table if exists public.staff_alts enable row level security;
alter table if exists public.menu_categories enable row level security;
alter table if exists public.menu_items enable row level security;
alter table if exists public.page_content enable row level security;

-- Create tables
create table public.admins (
  id uuid default gen_random_uuid() primary key,
  username text unique not null,
  password_hash text not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

create table public.pages (
  id uuid default gen_random_uuid() primary key,
  title text not null,
  slug text unique not null,
  is_staff_page boolean default false,
  is_menu_page boolean default false,
  sort_order integer default 0,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

create table public.staff (
  id uuid default gen_random_uuid() primary key,
  name text not null,
  role text not null,
  bio text,
  image_url text,
  special_role text,
  special_role_banner text,
  sort_order integer default 0,
  show_alts boolean default false,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

create table public.staff_alts (
  id uuid default gen_random_uuid() primary key,
  staff_id uuid references public.staff(id) on delete cascade,
  name text not null,
  role text not null,
  bio text,
  image_url text,
  sort_order integer default 0,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

create table public.menu_categories (
  id uuid default gen_random_uuid() primary key,
  name text not null,
  sort_order integer default 0,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

create table public.menu_items (
  id uuid default gen_random_uuid() primary key,
  category_id uuid references public.menu_categories(id) on delete cascade,
  name text not null,
  description text,
  price_gil integer,
  image_url text,
  sort_order integer default 0,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

create table public.page_content (
  id uuid default gen_random_uuid() primary key,
  page_id uuid references public.pages(id) on delete cascade,
  content jsonb not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Create storage buckets
insert into storage.buckets (id, name, public) values ('images', 'images', true);

-- RLS policies
create policy "Enable read access for all users" on public.pages for select using (true);
create policy "Enable read access for all users" on public.staff for select using (true);
create policy "Enable read access for all users" on public.staff_alts for select using (true);
create policy "Enable read access for all users" on public.menu_categories for select using (true);
create policy "Enable read access for all users" on public.menu_items for select using (true);
create policy "Enable read access for all users" on public.page_content for select using (true);

-- Admin policies (you'll need to implement proper auth)
create policy "Enable all access for authenticated users" on public.pages for all using (auth.role() = 'authenticated');
create policy "Enable all access for authenticated users" on public.staff for all using (auth.role() = 'authenticated');
create policy "Enable all access for authenticated users" on public.staff_alts for all using (auth.role() = 'authenticated');
create policy "Enable all access for authenticated users" on public.menu_categories for all using (auth.role() = 'authenticated');
create policy "Enable all access for authenticated users" on public.menu_items for all using (auth.role() = 'authenticated');
create policy "Enable all access for authenticated users" on public.page_content for all using (auth.role() = 'authenticated');

-- Insert default admin
insert into public.admins (username, password_hash)
values ('admin', '$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi'); -- admin123

-- Insert default pages
insert into public.pages (title, slug, is_staff_page, sort_order) values ('Home', 'home', false, 0);
insert into public.pages (title, slug, is_staff_page, sort_order) values ('Staff', 'staff', true, 1);
insert into public.pages (title, slug, is_menu_page, sort_order) values ('Menu', 'menu', true, 2);